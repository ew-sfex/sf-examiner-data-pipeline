# DataSF to Datawrapper Pipeline Update
*Last Updated: April 13, 2025*

## 1. Recent Findings & Improvements

### Data Query Refinements
- Successfully identified correct column naming conventions in DataSF API:
  - `service_subtype` for abandoned vehicle categorization
  - Column names may contain spaces and require proper escaping in SoQL queries
  - Service type variations exist (e.g., 'Abandoned Vehicle' vs 'MTA - Abandoned Vehicles Work')

### Visualization Enhancements
- Implemented improved chart formatting:
  - Consistent 3px stroke width for all lines
  - SF Examiner color scheme with most recent year highlighted in red
  - Enhanced tooltips and symbols for current year's data
  - Automatic y-axis scaling and grid formatting
  - Clear data source attribution and update timestamp

### Error Handling & Logging
- Added comprehensive logging throughout pipeline:
  - Raw data logging before pivoting
  - Sample data preview after processing
  - Unique months validation
  - Clear error messages for API failures

## 2. Working Components

### Data Retrieval
- Successfully fetching data from DataSF API
- Proper date range handling (2020-2025)
- Correct column name handling in queries

### Data Processing
- Month/year pivoting working correctly
- Proper ordering of months in visualization
- Handling of missing data points

### Chart Updates
- Successful metadata updates
- Consistent styling across charts
- Proper publishing workflow

## 3. Current Charts Status

All charts functioning with following IDs:
1. Street and Sidewalk Cleaning (Chart ID: Fgte7)
2. Graffiti Reports (Chart ID: aswDZ)
3. Encampment Reports (Chart ID: BJfSt)
4. Tree Maintenance (Chart ID: dQte4)
5. Abandoned Vehicles (Chart ID: R3cXx)

## 4. Recommended Improvements

### Short-term Tasks
1. **Query Optimization**
   - Add retry logic for timeout issues
   - Implement backoff strategy for rate limiting
   - Cache latest date query results

2. **Error Handling**
   - Add specific handling for common API errors (400, 429, 504)
   - Implement automatic retries for transient failures
   - Add notification system for persistent failures

3. **Data Validation**
   - Add pre-processing data validation checks
   - Implement minimum data point thresholds
   - Add data consistency checks across time periods

### Medium-term Enhancements
1. **Configuration Management**
   - Move chart configurations to external YAML/JSON file
   - Add environment-specific configurations
   - Create chart template system

2. **Monitoring & Alerting**
   - Add health checks for each chart update
   - Implement alert thresholds for data anomalies
   - Create dashboard for pipeline status

3. **Documentation**
   - Document column naming conventions
   - Create troubleshooting guide
   - Add chart configuration templates

## 5. Lessons Learned

### API Interaction
- Column names in DataSF can be inconsistent
- Rate limiting needs proactive management
- Query timeouts suggest need for optimization

### Data Processing
- Consistent data validation is crucial
- Proper handling of missing data points
- Month ordering needs explicit management

### Visualization
- Consistent styling improves readability
- Current year highlighting aids interpretation
- Proper metadata management ensures context

## 6. Next Steps

1. Implement retry logic for API timeouts
2. Create external configuration file
3. Add data validation checks
4. Implement monitoring system
5. Create comprehensive documentation
6. Add automated tests for data processing
7. Implement chart template system

## 7. Technical Details

### Current Query Structure
```sql
SELECT 
    date_extract_m(requested_datetime) AS month,
    date_extract_y(requested_datetime) AS year,
    COUNT(*) AS count
WHERE 
    service_subtype LIKE '%abandoned_vehicle%'
    AND requested_datetime >= '2020-01-01'
    AND requested_datetime <= '2025-03-31'
GROUP BY 
    year, month
ORDER BY 
    year ASC, month ASC
```

### Chart Metadata Structure
```python
metadata = {
    'visualize': {
        'line-stroke': 3,
        'interpolation': 'linear',
        'custom-colors': year_colors,
        'tooltip': True,
        'show-symbol': True
    },
    'describe': {
        'source-name': 'DataSF',
        'source-url': 'https://data.sfgov.org',
        'byline': 'Updated daily'
    }
}
``` 